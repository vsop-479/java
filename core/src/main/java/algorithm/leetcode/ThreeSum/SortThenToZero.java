package algorithm.leetcode.ThreeSum;

import algorithm.sort.quick.QuickSort2;
import java.util.ArrayList;
import java.util.List;

/**
 * Created by zhouhui on 2019/10/26.
 *  ????????????????0??
 * ????????????
 * https://leetcode-cn.com/problems/3sum/
 *
 * 1?????????????????????????0??????????????0?????
 * 2??????????a[i]???a[j]??a[k]??????????????????????????
 *      a[j],a[k]????result = 0-a[i];
 *      ?????j?i + 1??k?a.length - 1;
 *      a[j] + a[k] > result,??k--;
 *      a[j] + a[k] < result,??j++;
 * 3???????????
 *      i > 0???a[i] == a[i - 1]????continue??
 *      a[j] = a[j + 1]????j = j + 1??
 *      a[k] = a[k - 1]????k = k - 1??
 *
 * ?????
 * https://www.jianshu.com/p/69b0a1170f96
 */
public class SortThenToZero {
    public static void main(String[] args){
        int[] a = new int[]{1};
        long t1 = System.currentTimeMillis();
        List<List<Integer>> lists = threeSum(a);
        long t2 = System.currentTimeMillis();
        System.out.println(t2 - t1);
    }
    public static List<List<Integer>> threeSum(int[] a) {
        List<List<Integer>> list = new ArrayList();
        QuickSort2.quickSort(a, 0, a.length - 1);

        for(int i = 0; i < a.length; i++){
//            ??????????????????????0??
            if(a[i] > 0){
                break;
            }
//            ???????a[i];
            if(i > 0 && a[i] == a[i - 1]){
                continue;
            }
            int j = i + 1;
            int k = a.length - 1;
            int target = 0 - a[i];
//            ???????????a[j],a[k]????target??
            while(j < k){
                if(a[j] + a[k] == target){
                    List<Integer> subList = new ArrayList<>();
                    subList.add(a[i]);
                    subList.add(a[j]);
                    subList.add(a[k]);
                    list.add(subList);
//                    ??????????????????
                    while(j < k && a[j] == a[j + 1]){
                        j++;
                    }
                    while(k > j && a[k] == a[k - 1]){
                        k--;
                    }
//                    ????????????
                    j++;
                    k--;
                }else if(a[j] + a[k] < target){
                    j++;
                }else{
                    k--;
                }
            }
        }
        return list;
    }

}
